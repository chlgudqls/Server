스레드확인이가능하네


회사소스스레확인 몇개인지

한직원에 한개의일감을 던지는것보다 단기알바를 고용해서 




변수선언

변수에 값을할당 r1엔 변수를 할당

그럼 


모든걸 0으로밀고 맨위에서

그다음 밑에서 1로 밀고

while이실행되는 동안과

스레드가 실행되는 동안의 격차가있는데 while이 한바퀴돌아도 스레드가 할당을 마무리하지않았기떄문에

모두가 0이 되기전에 if문을 타지못하고 while에서 

아무튼 0으로 싹밀어낸게 

끝날때까지 스레드가 대기하는데 그럼 while이 한바퀴돌떄까지 기다리는거아닌가


r1과 r2는 각각 x와 y를대입하는건데 x와 y가 0이됐다는소리 두개는 서로 다른곳에서 값을할당



하드웨어가 지멋대로 뒤바꾸기때문에 서로 의존성이없는걸 마음대로 최적화시켜줌

실행을하다가 연관성이 없다고 판단한후 뒤집어서 while문을 빠져나오게한다 



메모리베리어는 가시성에 도움을주고 코드재배치를 억제한다


가시성 - 각 직원이 수첩에 적은내용을 공유해서 모두가 통일된 정보를 공유



store와 load의 개념

store 값을 직접할당

load 변수에있는 값을 끄집어내서 다른변수에 할당



가시성에대해 다시 자세히 알아봐야겠음

store를 write

Load를 read로 보고있으며

write를 했을경우 베리어를 쳐서 가시성을보장 얘는얘다라는걸 확실하게 정의하고 모두가 공유하는것

모두가 공유하면서 최신정보를 알수있다


가시성 -> 동기화작업이라고 볼수가있다

변하고있는값?이여서 그런가




exit이 실행되지않으면 데드락이 발생 락걸린상태에서 빠져나오질못하게됨

무한루프빠지는것만이 전부가 아니였음



자물쇠를 먼저획득한 스레드가 두번쨰자물쇠까지 권한획득

서로 락이 걸려있는상태면 꼬이게됨

데드락발생

빠져나오지못함

그래서 락이호출되는순서를 파악하면 데드락의 원인을 알아낼수있음

거꾸로물고있는상황

동시에 실행하지못하게하면 해결됨 서로 꼬이지않게됨 100초를 슬립시키고 다음꺼실행시킴


SpinLock 중요한개념

스레드가 중요한게맞았음




동시에들어가는상황도생김 그러면 문제가 생기는거같은데 어떤문제인지는 정확히모르겠고

동시에 들어가는 상황을 차단



애초에 아무도없었을떄 들어가게 만들게 하는방법

1로 넣어주는데 그전의 오리지널값을 반환해주는데

나로인해서 1로바꼇을때가 정상적인상황이기떄문에 0일때 break 화장실문열고 내가 들어가게된다































오류잡는거 자주수정하는프로세스이해

기본적인 이일에서하는것들

